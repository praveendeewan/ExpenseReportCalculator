<Window x:Class="ExpenseReportCalculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:ExpenseReportCalculator"
        Title="Expense Calculator" Height="390" Width="600" ResizeMode="CanMinimize" Icon="Resources/myIcon.ico"  >
    <Window.Background>
        <ImageBrush ImageSource="Resources/Water.jpg" />
    </Window.Background>
    <Grid Background="#88000000" >
        <!--<ComboBox Width="100" HorizontalAlignment="Left" Name="NumberComboBox" SelectionChanged="NumberComboBox_SelectionChanged" Margin="73,10,0,287">
        </ComboBox>-->
        <!--<StackPanel Name="stackpanel" Orientation="Horizontal" HorizontalAlignment="Left" Height="282" Margin="10,37,0,0" VerticalAlignment="Top" Width="497">
            
        </StackPanel>-->
        <Grid.Resources>
            <local:MultiValueConverter x:Key="MultiConverter"/>
            <!--<Style x:Key="eTemplate" TargetType="TextBox">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Trigger>
               </Style.Triggers>
            </Style>-->
            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel>
                                <Grid DockPanel.Dock="Right" Width="16" Height="16" VerticalAlignment="Center" Margin="3 0 0 0">
                                    <Ellipse Width="16" Height="16" Fill="Red"/>
                                    <Ellipse Width="3" Height="8" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0 2 0 0" Fill="White"/>
                                    <Ellipse Width="2" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0 0 0 2" Fill="White"/>
                                </Grid>
                                <Border BorderBrush="Red" BorderThickness="1" CornerRadius="2">
                                    <AdornedElementPlaceholder/>
                                </Border>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--<Style x:Key="TextBoxBaseStyle">
                <Style.Triggers>
                    <Trigger Property="Keyboard.IsKeyDown" Value="True">
                        
                    </Trigger>
                </Style.Triggers>
            </Style>-->
            <Style TargetType="{x:Type TextBox}">
                <!--<Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>
                                <AdornedElementPlaceholder x:Name="placeholder" />
                                <Popup AllowsTransparency="True" HorizontalAlignment="Right" HorizontalOffset="0" VerticalOffset="0" PopupAnimation="Fade" Placement="Right" 
                                   PlacementTarget="{Binding ElementName=errorBorder}" IsOpen="{Binding ElementName=placeholder, Path=AdornedElement.IsFocused, Mode=OneWay}">
                                    <StackPanel Orientation="Horizontal">
                                        <Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E"
                                      StrokeThickness="2" />
                                        <Border Background="#FFCB2E2E" CornerRadius="4" Padding="4">
                                            <TextBlock HorizontalAlignment="Center" Foreground="White" FontWeight="Bold" Margin="2,0,0,0"
                                                   Text="{Binding ElementName=placeholder, Path=AdornedElement.ToolTip, Mode=OneWay}" />
                                        </Border>
                                    </StackPanel>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>-->
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <StackPanel>
            <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                <Label FontWeight="Bold" Foreground="WhiteSmoke" Content="Number of People:" VerticalAlignment="Center" />
                <ComboBox x:Name="cmbBox" Width="50" Margin="10,0,20,0" ItemsSource="{Binding Path=TotalPeople}" 
                  SelectedItem="{Binding Mode=TwoWay, Path=SelectedPeopleNumber, ValidatesOnDataErrors=True}" Height="20"/>
                <Button Content="Final Amount" Command="{Binding FinalAmountCommand}" VerticalAlignment="Center"  Margin="5,0,5,0"  Width="85"/>
                <Button Content="Export" Command="{Binding ExportFileCommand}" VerticalAlignment="Center"  Margin="10,0,5,0"  Width="70">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource MultiConverter}">
                            <Binding ElementName="grpBox1" Path="Header.Text"/>
                            <Binding ElementName="grpBox2" Path="Header.Text"/>
                            <Binding ElementName="grpBox3" Path="Header.Text"/>
                            <Binding ElementName="grpBox4" Path="Header.Text"/>
                            <Binding ElementName="grpBox5" Path="Header.Text"/>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
                <Label FontWeight="Bold" Foreground="WhiteSmoke" FontSize="18" Content="Per Head:"  Margin="25,0,0,0" VerticalAlignment="Center" Width="90"/>
                <Label x:Name="LblPerHead" FontWeight="Bold" FontSize="18" Foreground="WhiteSmoke"  Margin="5,0,0,0" VerticalAlignment="Center" Width="90" Content="{Binding TotalPerHead, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <GroupBox x:Name="grpBox1" FontWeight="Bold"  Foreground="WhiteSmoke" Padding="4,8" Margin="4">
                    <!--<GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock Height="20" Text="Person1" MouseDown="txtBlock_MouseDown"/>
                                <TextBox Height="20" LostFocus="txtBox_LostFocus" Visibility="Collapsed"/>
                            </Grid>
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>-->
                    <GroupBox.Header>
                            <TextBox Text="Person1"/>
                    </GroupBox.Header>
                    <StackPanel Orientation="Vertical">
                        <TextBox x:Name="txtBox1"  IsEnabled="{Binding Path=IsTextBox1Enabled}" HorizontalAlignment="Left" Height="23"  TextWrapping="Wrap" Text="{Binding Path=Roommate1Expenses, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  VerticalAlignment="Top" Width="89">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding Path=InsertCommand1}"  Key="Enter" />
                            </TextBox.InputBindings>
                        </TextBox>
                        <ListBox x:Name="lstBox1" HorizontalAlignment= "Center" ScrollViewer.CanContentScroll="False" Height="148" Margin="0,10,0,10"  Width="89" ItemsSource="{Binding Roommate1List, UpdateSourceTrigger=PropertyChanged}">
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Delete" Command="{Binding Path=DeleteCommand1}" CommandParameter="{Binding Path=PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                                </ContextMenu>
                            </ListBox.ContextMenu>
                        </ListBox>
                        <Button Content="Reset" Command="{Binding ResetCommand}" CommandParameter="List1" HorizontalAlignment="Left" Margin="0,5,0,10"  Width="38" />
                        <TextBlock x:Name="txtBlock1" Margin="0,0,0,0" HorizontalAlignment="Center"  TextWrapping="Wrap"  Height="23" Width="89" Text="{Binding FinalExpensePerson1, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="grpBox2" FontWeight="Bold" Foreground="WhiteSmoke" Padding="4,8" Margin="4">
                    <GroupBox.Header>
                            <TextBox Text="Person2"/>
                    </GroupBox.Header>
                    <StackPanel Orientation="Vertical" >
                        <TextBox x:Name="txtBox2" HorizontalAlignment="Left" IsEnabled="{Binding Path=IsTextBox2Enabled}"   Height="23" TextWrapping="Wrap" Text="{Binding Path=Roommate2Expenses, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" VerticalAlignment="Top" Width="89">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding Path=InsertCommand2}" Key="Enter" />
                            </TextBox.InputBindings>
                        </TextBox>
                        <ListBox ScrollViewer.CanContentScroll="False" x:Name="lstBox2"  HorizontalAlignment="Center" Height="148" Margin="0,10,0,10"  Width="89" ItemsSource="{Binding Path=Roommate2List, UpdateSourceTrigger=PropertyChanged}">
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Delete" Command="{Binding Path=DeleteCommand2}" CommandParameter="{Binding Path=PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                                </ContextMenu>
                            </ListBox.ContextMenu>
                        </ListBox>
                        <Button Content="Reset" Command="{Binding ResetCommand}" CommandParameter="List2" HorizontalAlignment="Left" Margin="0,5,0,10" VerticalAlignment="Top" Width="38" />
                        <TextBlock x:Name="txtBlock2" Margin="0,0,0,0" HorizontalAlignment="Center" Text="{Binding FinalExpensePerson2, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap"  Height="23" Width="89"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="grpBox3" FontWeight="Bold" Foreground="WhiteSmoke"  Padding="4,8" Margin="4">
                    <GroupBox.Header>
                            <TextBox Text="Person3"/>
                    </GroupBox.Header>
                    <StackPanel Orientation="Vertical" >
                        <TextBox x:Name="txtBox3"  HorizontalAlignment="Left" IsEnabled="{Binding Path=IsTextBox3Enabled}" Height="23"  TextWrapping="Wrap" Text="{Binding Path=Roommate3Expenses, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  VerticalAlignment="Top" Width="89">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding Path=InsertCommand3}"  Key="Enter" />
                            </TextBox.InputBindings>
                        </TextBox>
                        <ListBox x:Name="lstBox3" HorizontalAlignment= "Center" ScrollViewer.CanContentScroll="False" Height="148" Margin="0,10,0,10"  Width="89" ItemsSource="{Binding Path=Roommate3List, UpdateSourceTrigger=PropertyChanged}">
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Delete" Command="{Binding Path=DeleteCommand3}" CommandParameter="{Binding Path=PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                                </ContextMenu>
                            </ListBox.ContextMenu>
                        </ListBox>
                        <Button Content="Reset" Command="{Binding ResetCommand}" CommandParameter="List3" HorizontalAlignment="Left" Margin="0,5,0,10"  Width="38" />
                        <TextBlock x:Name="txtBlock3" Margin="0,0,0,0" HorizontalAlignment="Center"  TextWrapping="Wrap"  Height="23" Width="89" Text="{Binding FinalExpensePerson3, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="grpBox4" FontWeight="Bold" Foreground="WhiteSmoke" Padding="4,8" Margin="4">
                    <GroupBox.Header>
                            <TextBox Text="Person4"/>
                    </GroupBox.Header>
                    <StackPanel Orientation="Vertical" >
                        <TextBox x:Name="txtBox4"  HorizontalAlignment="Left" IsEnabled="{Binding Path=IsTextBox4Enabled}" Height="23"  TextWrapping="Wrap" Text="{Binding Path=Roommate4Expenses, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  VerticalAlignment="Top" Width="89">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding Path=InsertCommand4}"  Key="Enter" />
                            </TextBox.InputBindings>
                        </TextBox>
                        <ListBox x:Name="lstBox4" HorizontalAlignment= "Center" ScrollViewer.CanContentScroll="False" Height="148" Margin="0,10,0,10"  Width="89" ItemsSource="{Binding Path=Roommate4List, UpdateSourceTrigger=PropertyChanged}">
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Delete" Command="{Binding Path=DeleteCommand4}" CommandParameter="{Binding Path=PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                                </ContextMenu>
                            </ListBox.ContextMenu>
                        </ListBox>
                        <Button Content="Reset" Command="{Binding ResetCommand}" CommandParameter="List4" HorizontalAlignment="Left" Margin="0,5,0,10"  Width="38" />
                        <TextBlock x:Name="txtBlock4" Margin="0,0,0,0" HorizontalAlignment="Center"  TextWrapping="Wrap"  Height="23" Width="89" Text="{Binding FinalExpensePerson4, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </GroupBox>
                <GroupBox x:Name="grpBox5" FontWeight="Bold" Foreground="WhiteSmoke" Padding="4,8" Margin="4">
                    <GroupBox.Header>
                            <TextBox Text="Person5"/>
                    </GroupBox.Header>
                    <StackPanel Orientation="Vertical" >
                        <TextBox x:Name="txtBox5"  HorizontalAlignment="Left" IsEnabled="{Binding Path=IsTextBox5Enabled}" Height="23"  TextWrapping="Wrap" Text="{Binding Path=Roommate5Expenses, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  VerticalAlignment="Top" Width="89">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding Path=InsertCommand5}"  Key="Enter" />
                            </TextBox.InputBindings>
                        </TextBox>
                        <ListBox x:Name="lstBox5" HorizontalAlignment= "Center" Height="148" ScrollViewer.CanContentScroll="False" Margin="0,10,0,10"  Width="89" ItemsSource="{Binding Path=Roommate5List, UpdateSourceTrigger=PropertyChanged}">
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Delete" Command="{Binding Path=DeleteCommand5}" CommandParameter="{Binding Path=PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                                </ContextMenu>
                            </ListBox.ContextMenu>
                        </ListBox>
                        <Button Content="Reset" Command="{Binding ResetCommand}" CommandParameter="List5" HorizontalAlignment="Left" Margin="0,5,0,10"  Width="38" />
                        <TextBlock x:Name="txtBlock5" Margin="0,0,0,0" HorizontalAlignment="Center"  TextWrapping="Wrap"  Height="23" Width="89" Text="{Binding FinalExpensePerson5, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </StackPanel>
       
    </Grid>
</Window>
